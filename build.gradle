/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'

    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '0.2.0'

application {
    // Define the main class for the application
    mainClassName = 'edu.umich.andykong.ptmshepherd.PTMShepherd'
}

sourceSets {
    main {
         java {
            srcDirs = ['src']
         }
        resources {
            srcDirs = ['resources', 'src']
            include "**/*.txt"
        }
    }
    
    test {
        java {
            srcDirs = ['test']
        }
        resources {
            srcDirs = ['resources', 'src', 'test-resources']
            include "**/*.txt"
            include "**/*.tsv"
        }
    }
}

dependencies {
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.github.chhh:batmass-io:1.13.0'
//    implementation name: 'msftbx'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

shadowJar {
    exclude '**/*.java'
    exclude '**/*.html'
    exclude '**/OSGI-OPT/'
    archiveClassifier = null
}

task packageWithDeps(group: 'ptm-shepherd') {
    dependsOn 'clean'
    dependsOn 'installShadowDist'
    tasks.findByName('installShadowDist').mustRunAfter 'clean'
}

task packageNoDeps(group: 'ptm-shepherd') {
    dependsOn 'clean'
    dependsOn 'jar'
    tasks.findByName('jar').mustRunAfter 'clean'
}

task printSrcSets(group: 'ptm-shepherd') {
    doLast {
        sourceSets.each { ss ->
            println ss
            ss.getJava().each { srcpath ->
                println "java -> ${srcpath}"
            }
            ss.getResources().each { srcpath ->
                println "resources -> ${srcpath}"
            }
        }

    }
}
